{"version":3,"sources":["components/Machine.js","components/MGrid.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","backgroundColor","bullet","display","margin","transform","color","title","fontSize","pos","marginBottom","nested","paddingLeft","Machine","m","machine","classes","React","useState","open","setOpen","bull","className","console","log","Card","CardContent","Typography","gutterBottom","Network","variant","component","Name","IP","OS","List","aria-labelledby","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","Services","map","s","disablePadding","theme","flexGrow","paper","height","width","control","padding","spacing","MGrid","props","machines","Grid","container","item","xs","justify","ms","App","mmm","JSON","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24ec186.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: 'gainsboro'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(4)',\r\n    color: \"green\"\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  nested: {\r\n    paddingLeft: 40,\r\n  },\r\n});\r\n\r\nfunction Machine(m) {\r\n  const { machine } = m;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  console.log(m)\r\n\r\n  return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                {machine.Network}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                {bull} {machine.Name}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n                {machine.IP} -- {machine.OS}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <List\r\n                  component=\"nav\" aria-labelledby=\"nested-list-subheader\"\r\n              >\r\n                <ListItem button onClick={handleClick}>\r\n                    <ListItemText primary=\"Services\" />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                {machine.Services.map((s) => (\r\n                    <List component=\"div\" disablePadding>\r\n                        <ListItem button className={classes.nested}>\r\n                            <ListItemText primary={s} />\r\n                        </ListItem>\r\n                    </List>\r\n                  ))}\r\n                </Collapse>\r\n                </List>\r\n                </Typography>\r\n        </CardContent>\r\n        </Card>\r\n  );\r\n}\r\n\r\nexport default Machine;\r\n","import React from 'react';\r\nimport Machine from './Machine'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction MGrid(props) {\r\n    const { machines } = props;\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={spacing}>\r\n                    {machines.map((ms) => (\r\n                        <Grid item>\r\n                            <Machine machine={ms}/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>  \r\n    );\r\n}\r\n\r\nexport default MGrid;\r\n","import React from 'react';\nimport MGrid from './components/MGrid'\nimport './App.css';\n\nfunction App() { //networks) {\n  const mmm = JSON.parse(`\n  [{\n      \"Name\": \"test1\",\n      \"IP\": \"1.1.1.1\",\n      \"OS\": \"lunix\",\n      \"Network\": \"LAN-1\",\n      \"Services\": [\"nginx\", \"mysql\"]\n  },\n  {\n      \"Name\": \"test2\",\n      \"IP\": \"1.1.1.1\",\n      \"OS\": \"Windows\",\n      \"Network\": \"LAN-1\",\n      \"Services\": [\"apache\", \"docker\"]\n  },\n  {\n      \"Name\": \"test3\",\n      \"IP\": \".50\",\n      \"OS\": \"lunix\",\n      \"Network\": \"LAN-1\",\n      \"Services\": [\"BoatAPI\", \"Git\"]\n  }\n]`)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>LAN-1</h1>\n        <MGrid machines={mmm}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}