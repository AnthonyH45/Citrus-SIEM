{"version":3,"sources":["components/Machine.js","components/MGrid.js","App.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","backgroundColor","bullet","display","margin","transform","color","title","fontSize","pos","marginBottom","nested","paddingLeft","Machine","m","machine","classes","React","useState","open","setOpen","bull","className","console","log","Card","CardContent","Typography","gutterBottom","Network","variant","component","Name","IP","OS","List","aria-labelledby","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","Services","map","s","disablePadding","theme","flexGrow","paper","height","width","control","padding","spacing","MGrid","props","machines","Grid","container","item","xs","justify","ms","App","setState","socket","WebSocket","addEventListener","e","send","JSON","stringify","type","data","parse","OP","alert","a","fetch","then","response","status","json","catch","err","getMachineInfo","this","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b77dc04.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    backgroundColor: 'gainsboro'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(4)',\n    color: \"green\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  nested: {\n    paddingLeft: 40,\n  },\n});\n\nfunction Machine(m) {\n  const { machine } = m;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const bull = <span className={classes.bullet}>â€¢</span>;\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  console.log(m)\n\n  return (\n        <Card className={classes.root}>\n            <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {machine.Network}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n                {bull} {machine.Name}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n                {machine.IP} -- {machine.OS}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              <List\n                  component=\"nav\" aria-labelledby=\"nested-list-subheader\"\n              >\n                <ListItem button onClick={handleClick}>\n                    <ListItemText primary=\"Services\" />\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                {machine.Services.map((s) => (\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemText primary={s} />\n                        </ListItem>\n                    </List>\n                  ))}\n                </Collapse>\n                </List>\n                </Typography>\n        </CardContent>\n        </Card>\n  );\n}\n\nexport default Machine;\n","import React from 'react';\nimport Machine from './Machine'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction MGrid(props) {\n    const { machines } = props;\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.root} spacing={2}>\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={spacing}>\n                    {machines.map((ms) => (\n                        <Grid item>\n                            <Machine machine={ms}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </Grid>  \n    );\n}\n\nexport default MGrid;\n","import React from 'react';\nimport MGrid from './components/MGrid'\nimport './App.css';\n\n\n\nfunction App() { //networks) {\n  const [machines, setMachines] = React.setState({});\n\n  const socket = new WebSocket('ws://localhost:8080/ws');\n  socket.addEventListener('open', (e) => {\n      console.log('WS connected!');\n\n      socket.send(JSON.stringify({\n          type: 'ping',\n          data: {\n              nested: 'object'\n          },\n      }));\n  });\n\n  socket.addEventListener('message', (e) => {\n      console.log(`Received: ${e.data}`);\n\n      const data = JSON.parse(e.data);\n      switch (data.OP) {\n          case 'PING':\n              socket.send(JSON.stringify({\n                  type: 'PONG'\n              }));\n              break;\n      }\n  });\n\n  socket.addEventListener('close', () => {\n      alert('Websocket connection closed, refreshing page.')\n      // location.reload();\n  });\n\n  /*\n  const mmm = JSON.parse(`\n    [{\n        \"Name\": \"test1\",\n        \"IP\": \"1.1.1.1\",\n        \"OS\": \"lunix\",\n        \"Network\": \"LAN-1\",\n        \"Services\": [\"nginx\", \"mysql\"]\n    },\n    {\n        \"Name\": \"test2\",\n        \"IP\": \"1.1.1.1\",\n        \"OS\": \"Windows\",\n        \"Network\": \"LAN-1\",\n        \"Services\": [\"apache\", \"docker\"]\n    },\n    {\n        \"Name\": \"test3\",\n        \"IP\": \".50\",\n        \"OS\": \"lunix\",\n        \"Network\": \"LAN-1\",\n        \"Services\": [\"BoatAPI\", \"Git\"]\n    }\n  ]`)\n  */\n\n  // https://developers.google.com/web/updates/2015/03/introduction-to-fetch\n//   const getMachineInfo = async () => {\n//     await fetch(\"https://javascript_worker.ahall012.workers.dev/links\", {\n//     \"headers\": {\n//         \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n//         \"Accept-Language\": \"en-US,en;q=0.5\",\n//         \"Upgrade-Insecure-Requests\": \"1\",\n//         \"Sec-GPC\": \"1\",\n//         \"Cache-Control\": \"max-age=0\",\n//     },\n//     \"method\": \"GET\",\n//   });\n// }\n\n  const url = 'https://a-weeb.site/api/proxy_cors?url=https://jsonrequest.anthonyhallak.repl.co/';\n  const getMachineInfo = async () => {\n    await fetch(url)\n      .then(\n        function(response) {\n          if (response.status !== 200) {\n            console.log(\"CANNOT GET MACHINE INFO!\"+response.status);\n            return;\n          }\n          response.json().then(function(data) {\n            console.log(data);\n          });\n        }\n      )\n      .catch(\n        function(err) {\n          console.log('Fetch Error :::', err);\n        }\n      );\n  }\n\n  const ms = getMachineInfo();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>LAN-1</h1>\n        <MGrid machines={this.state.machines}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}