{"version":3,"sources":["components/Machine.js","components/MGrid.js","App.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","backgroundColor","bullet","display","margin","transform","color","title","fontSize","pos","marginBottom","nested","paddingLeft","Machine","m","machine","classes","React","useState","open","setOpen","bull","className","console","log","Card","CardContent","Typography","gutterBottom","Network","variant","component","Name","IP","OS","List","aria-labelledby","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","theme","flexGrow","paper","height","width","control","padding","spacing","MGrid","props","machines","Grid","container","item","xs","justify","Object","entries","map","e","k","v","socket","WebSocket","addEventListener","alert","callbackFunc","call","App","setMachines","data","JSON","parse","OP","send","stringify","type","Data","prev","Ident","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.956ca6a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: 'gainsboro'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(4)',\r\n    color: \"green\"\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  nested: {\r\n    paddingLeft: 40,\r\n  },\r\n});\r\n\r\nfunction Machine(m) {\r\n  const { machine } = m;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  console.log(m)\r\n\r\n  return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                {machine.Network}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                {bull} {machine.Name}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n                {machine.IP} -- {machine.OS}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <List\r\n                  component=\"nav\" aria-labelledby=\"nested-list-subheader\"\r\n              >\r\n                <ListItem button onClick={handleClick}>\r\n                    <ListItemText primary=\"Services\" />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              \r\n                </Collapse>\r\n                </List>\r\n                </Typography>\r\n        </CardContent>\r\n        </Card>\r\n  );\r\n}\r\n\r\n/*\r\n                {machine.Services.map((s) => (\r\n                    <List component=\"div\" disablePadding>\r\n                        <ListItem button className={classes.nested}>\r\n                            <ListItemText primary={s} />\r\n                        </ListItem>\r\n                    </List>\r\n                  ))}\r\n                  */\r\n\r\nexport default Machine;\r\n","import React from 'react';\r\nimport Machine from './Machine'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction MGrid(props) {\r\n    const { machines } = props;\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={spacing}>\r\n                    {Object.entries(machines).map(e => {\r\n                      const [k, v] = e;\r\n                      return (\r\n                        <Grid key={k} item>\r\n                        <Machine key={k} machine={v}/>\r\n                       </Grid>\r\n                      );\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>  \r\n    );\r\n}\r\n\r\nexport default MGrid;\r\n","import React from 'react';\r\nimport MGrid from './components/MGrid'\r\nimport './App.css';\r\n\r\nconst socket = new WebSocket('ws://localhost:8080/ws');\r\n\r\nsocket.addEventListener('open', (e) => {\r\n  console.log('WS connected!');\r\n});\r\n\r\nsocket.addEventListener('close', () => {\r\n  alert('Websocket connection closed, refreshing page.')\r\n  // location.reload();\r\n});\r\n\r\nlet callbackFunc;\r\n\r\nsocket.addEventListener('message', (e) => {\r\n  callbackFunc.call(e);\r\n})\r\n\r\nfunction App() { //networks) {\r\n  const [machines, setMachines] = React.useState({});\r\n\r\n  /*\r\n  const state = {\r\n    machines: {}\r\n  };\r\n  */\r\n\r\n  socket.addEventListener('open', (e) => {\r\n      console.log('WS connected!');\r\n  });\r\n\r\n  socket.addEventListener('message', (e) => {\r\n      console.log(`Received: ${e.data}`);\r\n\r\n      const data = JSON.parse(e.data);\r\n      switch (data.OP) {\r\n          case 'PING':\r\n              socket.send(JSON.stringify({\r\n                  type: 'PONG'\r\n              }));\r\n              break;\r\n          case 'CURR_MACHINES':\r\n            setMachines(() => data.Data);\r\n              break;\r\n          case 'UPDATE_MACHINE':\r\n            setMachines((prev) => prev[data.Data.Ident] = data.Data);\r\n              break;\r\n          default:\r\n                  break;\r\n      }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>LAN-1</h1>\r\n        <MGrid machines={machines}/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}