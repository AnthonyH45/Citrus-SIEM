{"version":3,"sources":["components/Machine/Machines.tsx","components/MGrid/MGrid.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","minWidth","backgroundColor","alive","display","margin","transform","color","dead","title","fontSize","pos","marginBottom","nested","paddingLeft","Machine","key","m","classes","Card","className","CardContent","Typography","gutterBottom","Uptime","variant","component","On","Hostname","IP","OS","theme","flexGrow","paper","height","width","control","padding","spacing","MGrid","inv","length","console","log","Grid","container","item","xs","justify","map","e","Ident","socket","WebSocket","App","React","useState","ms","setMachines","useEffect","Object","values","addEventListener","data","mInfo","JSON","parse","OP","send","stringify","type","Data","prev","undefined","i","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6766d55.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: 'gainsboro'\r\n  },\r\n  alive: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(4)',\r\n    color: \"green\"\r\n  },\r\n  dead: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(4)',\r\n    color: \"red\"\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  nested: {\r\n    paddingLeft: 40,\r\n  },\r\n});\r\n\r\nexport interface machine {\r\n  Uptime: string,\r\n  Hostname: string,\r\n  IP: string,\r\n  OS: string,\r\n  On: \"1\" | \"0\",\r\n  Ident: string\r\n}\r\n\r\ninterface Props {\r\n  m: machine,\r\n  key?: string\r\n}\r\n\r\nexport default function Machine({key, m}: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} key={key}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {m.Uptime}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <span className={(m.On === \"1\") ? classes.alive:classes.dead}>â€¢</span> {m.Hostname}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {m.IP} -- {m.OS}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Machine, { machine } from '../Machine';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  inv: machine[],\r\n  key?: string\r\n}\r\n\r\nexport default function MGrid({inv, key}: Props) {\r\n  const classes = useStyles();\r\n\r\n  if (inv.length === 0) return <h2>No machines added yet!</h2>;\r\n\r\n  console.log(inv)\r\n\r\n  return (\r\n      <Grid container className={classes.root} spacing={2}>\r\n          <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                  {inv.map(e => {\r\n                    return (\r\n                      <Grid key={e.Ident+\"griddd\"} item>\r\n                        <Machine key={e.Ident+\"machineee\"} m={e}/>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n          </Grid>\r\n      </Grid>  \r\n  );\r\n}\r\n","import React from 'react';\nimport MGrid from './components/MGrid/MGrid';\nimport './App.css';\n\nimport { machine } from './components/Machine';\n\nconst socket = new WebSocket('ws://localhost:8080/ws');\n\nsocket.addEventListener('open', (e) => {\n  console.log('WS connected!');\n});\n\nsocket.addEventListener('close', () => {\n  console.log('Websocket connection closed, refreshing page.')\n});\n\nfunction useForceUpdate(){\n  const [value, setValue] = React.useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nexport default function App() { //networks) {\n\n  const [ms, setMachines] = React.useState([{\n    Uptime: \"Uptime\",\n    Hostname: \"Hostname\",\n    IP: \"IP\",\n    OS: \"OS\",\n    On: \"1\",\n    Ident: \"id\"\n  } as machine]);\n  \n  React.useEffect(() => {\n    setMachines(() => Object.values({}));\n  }, []);\n\n  const updateMachine = (mInfo: machine) => {\n    setMachines((prev: any) => { // supposed to be `: machine[]`\n      if (prev === undefined) prev = [];\n\n        for (let i = 0; i < prev.length; i++) {\n          if (prev[i].Ident === mInfo.Ident) {\n             prev[i] = mInfo;\n             return prev;\n          }\n        }\n        prev.push(mInfo);\n        console.log(\"Adding to array\")\n        console.log(prev)\n        return prev;\n    });\n  }\n\n  socket.addEventListener('message', (e) => {\n    console.log(`Received: ${e.data}`);\n    \n    const data = JSON.parse(e.data);\n    switch (data.OP) {\n\n      case 'PING':\n        socket.send(JSON.stringify({\n          type: 'PONG'\n        }));\n        break;\n\n      case 'CURR_MACHINES':\n        setMachines(() => Object.values(data.Data));\n        break;\n\n      case 'UPDATE_MACHINE':\n        updateMachine(data.Data);\n        break;\n\n      default:\n        break;\n      }\n  });\n\n  console.log(\"HI\")\n  console.log(ms)\n  console.log(\"IH\")\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>LAN-1</h1>\n          <MGrid inv={ms}/>\n      </header>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}