{"version":3,"sources":["components/Machine/Machines.tsx","components/MGrid/MGrid.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","minWidth","backgroundColor","alive","display","margin","transform","color","dead","title","fontSize","pos","marginBottom","nested","paddingLeft","Machine","key","m","classes","console","log","Card","className","CardContent","Typography","gutterBottom","Uptime","variant","component","On","Hostname","IP","OS","theme","flexGrow","paper","height","width","control","padding","spacing","MGrid","inv","Grid","container","item","xs","justify","map","e","Ident","socket","WebSocket","App","React","useState","ms","setMachines","addEventListener","data","mInfo","JSON","parse","OP","send","stringify","type","Object","values","Data","prev","undefined","i","length","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e911557.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    backgroundColor: 'gainsboro'\n  },\n  alive: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(4)',\n    color: \"green\"\n  },\n  dead: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(4)',\n    color: \"red\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  nested: {\n    paddingLeft: 40,\n  },\n});\n\nexport interface machine {\n  Uptime: string,\n  Hostname: string,\n  IP: string,\n  OS: string,\n  On: \"1\" | \"0\",\n  Ident: string\n}\n\ninterface Props {\n  m: machine,\n  key?: string\n}\n\nexport default function Machine({key, m}: Props) {\n  const classes = useStyles();\n\n  console.log(m)\n\n  return (\n    <Card className={classes.root} key={key}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {m.Uptime}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          <span className={(m.On === \"1\") ? classes.alive:classes.dead}>â€¢</span> {m.Hostname}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {m.IP} -- {m.OS}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Machine, { machine } from '../Machine';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\ninterface Props {\n  inv: machine[],\n  key?: string\n}\n\nexport default function MGrid({inv, key}: Props) {\n    const classes = useStyles();\n\n    console.log(inv)\n\n    return (\n        <Grid container className={classes.root} spacing={2} key={key}>\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={3}>\n                    {inv.map(e => {\n                      return (\n                        <Grid key={e.Ident} item>\n                          <Machine key={e.Ident} m={e}/>\n                        </Grid>\n                      );\n                    })}\n                </Grid>\n            </Grid>\n        </Grid>  \n    );\n}\n","import React from 'react';\nimport MGrid from './components/MGrid/MGrid';\nimport './App.css';\n\nimport { machine } from './components/Machine';\n\nconst socket = new WebSocket('ws://localhost:8080/ws');\n\nsocket.addEventListener('open', (e) => {\n  console.log('WS connected!');\n});\n\nsocket.addEventListener('close', () => {\n  console.log('Websocket connection closed, refreshing page.')\n});\n\nexport default function App() { //networks) {\n  const [ms, setMachines] = React.useState([{\n    Uptime: \"Uptime\",\n    Hostname: \"Hostname\",\n    IP: \"IP\",\n    OS: \"OS\",\n    On: \"1\",\n    Ident: \"id\"\n  } as machine]);\n\n  const updateMachine = (mInfo: machine) => {\n    setMachines((prev: any) => { // supposed to be `: machine[]`\n      if (prev === undefined) prev = [];\n\n        for (let i = 0; i < prev.length; i++) {\n          if (prev[i].Ident === mInfo.Ident) {\n             prev[i] = mInfo;\n             return prev;\n          }\n        }\n        prev.push(mInfo);\n        return prev;\n    });\n  }\n\n  socket.addEventListener('open', (e) => {\n      console.log('WS connected!');\n  });\n\n  socket.addEventListener('message', (e) => {\n    console.log(`Received: ${e.data}`);\n    \n    const data = JSON.parse(e.data);\n    switch (data.OP) {\n\n      case 'PING':\n        socket.send(JSON.stringify({\n          type: 'PONG'\n        }));\n        break;\n\n      case 'CURR_MACHINES':\n        setMachines(() => Object.values(data.Data));\n        break;\n\n      case 'UPDATE_MACHINE':\n        updateMachine(data.Data);\n        break;\n\n      default:\n        break;\n      }\n  });\n\n  console.log(\"HI\")\n  console.log(ms)\n  console.log(\"IH\")\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>LAN-1</h1>\n        {\n          (ms === undefined) ?\n         <h2>No machines added yet!</h2> \n         : (ms.length === 0) ?\n         <h2>No machines added yet!</h2> \n         : <MGrid inv={ms} key=\"MGrid\"/>\n        }\n      </header>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}